name: End to End Testing

on:
  push:
    branches:
      - main
      - release-*
    tags:
      - 'v*'
  pull_request: {}
  workflow_dispatch: {}

env:
  UP_ORG: ${{ secrets.UP_ORG }}

jobs:
  e2e:
    if: github.event_name == 'workflow_dispatch' || contains(github.event.pull_request.labels.*.name, 'run-e2e-tests')
    runs-on: ubuntu-latest
    strategy:
      matrix:
        language: [kcl]
        test-language: [kcl]
    steps:
      - name: Checkout
        id: checkout
        uses: actions/checkout@v4
        with:
          path: ./template

      - name: Setup Go
        id: setup-go
        uses: actions/setup-go@d35c59abb061a4a6fb18e82ac0862c26744d6ab5 # v5
        with:
          go-version: '>=1.24.0'
          cache: false

      - name: Install and login with up
        if: env.UP_API_TOKEN != '' && env.UP_ORG != ''
        uses: upbound/action-up@v1
        with:
          api-token: ${{ secrets.UP_API_TOKEN }}
          organization: ${{ secrets.UP_ORG }}
          channel: main
          version: v0.39.0-350.gb6abc325

      - name: Initialize project
        run: up project init -e ./template generated-project --language ${{ matrix.language }} --test-language ${{ matrix.test-language }}

      - name: Build project
        run: cd generated-project && up project build

      - name: Run e2e tests
        env:
          UP_AWS_ACCESS_KEY_ID: ${{ env.AWS_ACCESS_KEY_ID }}
          UP_AWS_SECRET_ACCESS_KEY: ${{ env.AWS_SECRET_ACCESS_KEY }}
          UP_AWS_SESSION_TOKEN: ${{ env.AWS_SESSION_TOKEN }}
        run: cd generated-project && up test run tests/* --e2e --local --skip-control-plane-cleanup

      - name: Install kind CLI
        if: failure()
        run: |
          curl -Lo ./kind https://kind.sigs.k8s.io/dl/v0.20.0/kind-linux-amd64
          chmod +x ./kind
          sudo mv ./kind /usr/local/bin/kind

      - name: Install supportbundle CLI
        if: failure()
        run: |
          curl -Lo ./support-bundle https://github.com/replicatedhq/troubleshoot/releases/latest/download/support-bundle_linux_amd64.tar.gz
          tar -xzf ./support-bundle
          chmod +x ./support-bundle
          sudo mv ./support-bundle /usr/local/bin/support-bundle

      - name: Collect diagnostic information
        if: failure()
        run: |
          kind get clusters
          FIRST_CLUSTER=$(kind get clusters | head -n 1)
          if [ -n "$FIRST_CLUSTER" ]; then
            kind export kubeconfig --name "$FIRST_CLUSTER"
            support-bundle --kubeconfig ~/.kube/config --output support-bundle.tar.gz ./template/.github/supportbundle.yaml
          else
            echo "No kind clusters found"
            touch support-bundle.tar.gz
          fi

      - name: Upload support bundle
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: support-bundle-${{ matrix.language }}-${{ matrix.test-language }}
          path: support-bundle.tar.gz
          retention-days: 1
